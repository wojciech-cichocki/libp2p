{"version":3,"sources":["protocol/protocol.model.js","protocol/protocol.utility.js","store/actions.ts","p2p-node/peer-id.ts","p2p-node/libp2p.ts","p2p-node/pub-sub.ts","store/types.ts","containers/MainPage/style.ts","containers/SeatsPanel/style.ts","static/theme.ts","components/SeatCard/style.ts","components/SeatStatus/style.ts","components/SeatStatus/SeatStatus.tsx","components/TakeSeatButton/style.ts","components/TakeSeatButton/TakeSeatButton.tsx","components/SeatCard/SeatCard.tsx","store/selectors/helper.ts","store/selectors/selectors.ts","containers/SeatsPanel/SeatsPanel.tsx","containers/MainPage/MainPage.tsx","App.tsx","serviceWorker.ts","store/reducers/helper.ts","store/reducers/reducer.ts","store/sagas.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["Message","require","protons","module","exports","uint8arrayToString","seatFromBytes","seat","transformMsg","peerIdConverter","output","Object","assign","peerId","decodeCurrentState","encodedCurrentState","decode","currentState","firstSeat","secondSeat","encodeTakeSeatRequest","id","timestamp","encode","type","Type","TAKE_SEAT_REQUEST","takeSeatRequest","decodeTakeSeatRequest","encodedTakeSeatRequest","encodeReleaseSeatRequest","RELEASE_SEAT_REQUEST","releaseSeatRequest","decodeReleaseSeatRequest","encodedReleaseSeatRequest","decodeMessage","encodedMessage","encodeRequiresSynchronization","REQUIRES_SYNCHRONIZATION","SeatAction","setPeerId","action","SET_PEER_ID","releaseSeatResponse","seatRequest","RELEASE_SEAT_HANDLER","a","JSON","parse","localStorage","getItem","PeerId","createFromJSON","create","setItem","stringify","toJSON","getOrCreatePeerId","Libp2p","Websockets","WebrtcStar","Mplex","NOISE","Bootstrap","KademliaDHT","Gossipsub","listenAddr","discoveryAddr","_libp2p","addresses","listen","modules","transport","streamMuxer","connEncryption","peerDiscovery","dht","pubsub","config","bootstrap","list","enabled","randomWalk","start","getOrCreateLibp2p","MessageType","_pubSub","PubSub","libp2p","topic","_topic","_connectedPeers","this","Set","connectionManager","on","handleConnect","bind","handleDisconnect","messageHandler","payLoad","convertPayload","subscribe","removeListener","unsubscribe","setTimeout","send","Date","now","_idB58String","message","publish","connection","has","remotePeer","toB58String","console","info","add","requiresSynchronization","delete","payload","from","data","decodedMessage","messageType","messageData","CURRENT_STATE","getOrCreatePubSub","SeatType","useStyles","makeStyles","root","display","margin","width","colors","base","light","main","createMuiTheme","palette","primary","contrastText","secondary","text","typography","fontFamily","body1","fontSize","lineHeight","body2","h1","h2","h3","theme","height","padding","backgroundColor","borderRadius","fontWeight","color","status","textAlign","borderStyle","borderWidth","minHeight","skeletonStatus","SeatStatus","taken","initialized","classes","Grid","className","Typography","last","prefix","substr","suffix","length","concat","shortenPeerId","getStatusBox","button","textTransform","TakeSeatButton","releasable","onClick","disabled","Button","getButtonName","SeatCard","dispatch","useDispatch","container","direction","justify","seatId","seatToSeatCard","init","TAKEN","state","seatState","SeatCardSelector","createSelector","seatCards","push","SeatsPanel","seatsCards","useSelector","MainPage","alignItems","App","setMessageHandler","pubSub","joinTopic","getPeerId","CURRENT_STATE_RESPONSE","TAKE_SEAT_HANDLER","useEffect","INIT_LIB_P2P","Boolean","window","location","hostname","match","takeSeat","releaseSeat","undefined","FREE","checkSeatIsFree","checkSeatIsTakenByPeer","getLastTimestamp","t1","t2","initialState","handleRequiresSynchronization","handleInitLibp2p","handleTakeSeat","handleReleaseSeat","listenInitlibp2p","listenRequiresSynchronization","listenTakeSeat","listenReleaseSeat","seatSaga","put","takeEvery","REQUIRES_SYNCHRONIZATION_REQUEST","all","fork","rootSaga","rootReducer","combineReducers","currentTimestamp","proposalTimestamp","newSeat","store","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"uHAAA,IAEOA,EAFSC,EAAQ,GAENC,CAAQ,2gCAAnBF,QA2CPG,EAAOC,QAAU,CACbJ,Y,4NC9CJ,IAAMK,EAAqBJ,EAAQ,IAE5BD,EAAWC,EAAQ,KAAnBD,QAoDDM,EAAgB,SAACC,GACnB,OAAOC,EAAaD,EAAMF,IAGxBG,EAAe,SAACD,EAAME,GACxB,IAAMC,EAASC,OAAOC,OAAO,GAAIL,GACjC,OAAIG,EAAOG,OACAF,OAAOC,OAAOF,EAAQ,CAACG,OAAQJ,EAAgBC,EAAOG,kBAE1DH,EAAOG,OACPH,IAGXP,EAAOC,QAAU,CACbU,mBAvBuB,SAACC,GAAyB,IAC5BD,EAAsBd,EAAQgB,OAAOD,GAAnDE,aAEP,MAAO,CACHC,UAAWZ,EAAcQ,EAAmBI,WAC5CC,WAAYb,EAAcQ,EAAmBK,cAmBjDC,sBAtD0B,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,UAChC,OAAOtB,EAAQuB,OAAO,CAClBC,KAAMxB,EAAQyB,KAAKC,kBACnBC,gBAAiB,CACbN,KACAC,gBAkDRM,sBA7C0B,SAACC,GAE3B,OAD0B7B,EAAQgB,OAAOa,GAAlCF,iBA6CPG,yBAzC6B,SAAC,GAAqB,IAApBT,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,UACnC,OAAOtB,EAAQuB,OAAO,CAClBC,KAAMxB,EAAQyB,KAAKM,qBACnBC,mBAAoB,CAChBX,KACAC,gBAqCRW,yBAhC6B,SAACC,GAE9B,OAD6BlC,EAAQgB,OAAOkB,GAArCF,oBAgCPG,cA9DkB,SAACC,GACnB,OAAOpC,EAAQgB,OAAOoB,IA8DtBC,8BArEkC,WAClC,OAAOrC,EAAQuB,OAAO,CAClBC,KAAMxB,EAAQyB,KAAKa,8B,4CCHfC,E,4FAAAA,K,4BAAAA,E,0BAAAA,E,oEAAAA,E,gDAAAA,E,sCAAAA,E,sCAAAA,E,4CAAAA,E,6CAAAA,M,KAWL,IACMC,EAAY,SAAC3B,GAAD,OAAoB4B,iBAAOF,EAAWG,YAAa7B,IAO/D8B,EAAsB,SAACC,GAAD,OAA8BH,iBAAOF,EAAWM,qBAAsBD,I,+ECrBzG,4BAAAE,EAAA,sEAGQjC,EAASkC,KAAKC,MAAMC,aAAaC,QAAQ,WAHjD,SAIuBC,IAAOC,eAAevC,GAJ7C,OAIQA,EAJR,wEAMuBsC,IAAOE,SAN9B,QAMQxC,EANR,OAOQoC,aAAaK,QAAQ,SAAUP,KAAKQ,UAAU1C,EAAO2C,WAP7D,iCAUW3C,GAVX,0D,sBAae4C,M,2CCbTC,EAASzD,EAAQ,KACjB0D,EAAa1D,EAAQ,KACrB2D,EAAa3D,EAAQ,KACrB4D,EAAQ5D,EAAQ,KACf6D,EAAS7D,EAAQ,KAAjB6D,MACDC,EAAY9D,EAAQ,KACpB+D,EAAc/D,EAAQ,KACtBgE,EAAYhE,EAAQ,KAEpBiE,EAAa,8CACbC,EAAgB,iFAElBC,EAAsB,K,4CAE1B,4BAAAtB,EAAA,sEAC0BW,IAD1B,UACU5C,EADV,OAGmB,MAAXuD,EAHR,yCAIeA,GAJf,uBAOoBV,EAAOL,OAAO,CAC1BxC,SACAwD,UAAW,CACPC,OAAQ,CACJJ,IAGRK,QAAS,CACLC,UAAW,CAACb,EAAYC,GACxBa,YAAa,CAACZ,GACda,eAAgB,CAACZ,GACjBa,cAAe,CAACZ,GAChBa,IAAKZ,EACLa,OAAQZ,GAEZa,OAAQ,CACJH,cAAe,CACXI,UAAW,CACPC,KAAM,CAACb,KAGfS,IAAK,CACDK,SAAS,EACTC,WAAY,CACRD,SAAS,OA/B7B,cAOIb,EAPJ,iBAoCUA,EAAQe,QApClB,iCAsCWf,GAtCX,6C,sBAyCegB,IC/CHC,ED+CGD,E,2CCtDRpF,EAAWC,EAAQ,KAAnBD,Q,EAKHC,EAAQ,KAHRoC,E,EAAAA,8BAA+BjB,E,EAAAA,sBAC/BU,E,EAAAA,yBAA0BK,E,EAAAA,cAAerB,E,EAAAA,mBACzCc,E,EAAAA,sBAAuBK,E,EAAAA,0B,SAGfoD,O,iCAAAA,I,yCAAAA,I,+CAAAA,I,wDAAAA,M,SAqIRC,EAvGEC,E,WAKF,WAAYC,EAAaC,GAAgB,yBAJxBC,YAIuB,OAHhCtB,aAGgC,OAFhCuB,qBAEgC,EACpCC,KAAKxB,QAAUoB,EACfI,KAAKF,OAASD,EACdG,KAAKD,gBAAkB,IAAIE,IAE3BD,KAAKxB,QAAQ0B,kBAAkBC,GAAG,eAAgBH,KAAKI,cAAcC,KAAKL,OAC1EA,KAAKxB,QAAQ0B,kBAAkBC,GAAG,kBAAmBH,KAAKM,iBAAiBD,KAAKL,OAEhFA,KAAKxB,QAAQS,OAAOM,Q,sDAGPgB,GACbP,KAAKxB,QAAQS,OAAOkB,GAAGH,KAAKF,QAAQ,SAACU,GACjCD,EAAeZ,EAAOc,eAAeD,OAGzCR,KAAKxB,QAAQS,OAAOyB,UAAUV,KAAKF,U,mCAKnCE,KAAKxB,QAAQS,OAAO0B,eAAeX,KAAKF,QACxCE,KAAKxB,QAAQS,OAAO2B,YAAYZ,KAAKF,U,gDAGP,IAAD,OAC7Be,YAAW,WACP,EAAKC,KAAKrE,OACX,O,wEAGehB,G,iFACZuE,KAAKc,KAAKtF,EAAsB,CAClCC,GAAIA,EACJC,UAAWqF,KAAKC,S,kLAICvF,G,iFACfuE,KAAKc,KAAK5E,EAAyB,CACrCT,GAAIA,EACJC,UAAWqF,KAAKC,S,yIAKpB,OAAOhB,KAAKxB,QAAQvD,OAAOgG,e,oEAkCZC,G,iFACTlB,KAAKxB,QAAQS,OAAOkC,QAAQnB,KAAKF,OAAQoB,G,2IAG7BE,GACdpB,KAAKD,gBAAgBsB,IAAID,EAAWE,WAAWC,iBACnDC,QAAQC,KAAR,wBAA8BL,EAAWE,WAAWC,gBACpDvB,KAAKD,gBAAgB2B,IAAIN,EAAWE,WAAWC,eAC/CvB,KAAK2B,6B,uCAGgBP,GACrBI,QAAQC,KAAR,2BAAiCL,EAAWE,WAAWC,gBACvDvB,KAAKD,gBAAgB6B,OAAOR,EAAWE,WAAWC,kB,sCA5CxBM,GAA6B,IAChDC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KAEPC,EAAiBzF,EAAcwF,GAC/BE,EAA2BD,EAAepG,KAC5CsG,EAA2B,KAE/B,OAAQF,EAAepG,MACnB,KAAKxB,EAAQyB,KAAKsG,cACdD,EAAchH,EAAmB6G,GACjC,MAEJ,KAAK3H,EAAQyB,KAAKC,kBAAoB,IAAD,EACTE,EAAsB+F,GAC9CG,EAAc,CAACzG,GAFkB,EAC1BA,GACYC,UAFc,EACtBA,UACmBoG,QAC9B,MAEJ,KAAK1H,EAAQyB,KAAKM,qBAAuB,IAAD,EACZE,EAAyB0F,GACjDG,EAAc,CAACzG,GAFqB,EAC7BA,GACYC,UAFiB,EACzBA,UACmBoG,QAKtC,MAAO,CACHA,OACAG,cACAF,KAAMG,O,KAwBX,SAAeE,IAAtB,+B,4CAAO,4BAAAlF,EAAA,yDACY,MAAXwC,EADD,yCAEQA,GAFR,uBAKkBF,IALlB,cAKGI,EALH,OAMHF,EAAU,IAAIC,EAAOC,EATI,gCAGtB,kBAQIF,GARJ,4C,0BC1IK2C,E,kBCEGC,EAPGC,aAAW,iBAAO,CAChCC,KAAM,CACFC,QAAS,OACTC,OAAQ,YCIDJ,EAPGC,aAAW,iBAAO,CAChCC,KAAM,CACFC,QAAS,OACTE,MAAO,Y,SCHFC,GACL,CACJC,KAAM,UACNC,MAAO,WAHEF,GAKN,CACHC,KAAM,UACNC,MAAO,WAPEF,GASH,CACNC,KAAM,UACNC,MAAO,WAXEF,GAaL,CACJC,KAAM,WAdGD,GAgBJ,CACLG,KAAM,WCHKT,IDMMU,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPH,KAAMH,GAAYC,KAClBM,aAAcP,GAAWC,MAE3BO,UAAW,CACTL,KAAMH,GAAcC,MAEtBQ,KAAM,CACJH,QAASN,GAAaG,KACtBK,UAAWR,GAAYE,QAG3BQ,WAAY,CACVC,WAAY,SACZC,MAAO,CACLC,SAAU,GACVC,WAAY,QAEdC,MAAO,CACLF,SAAU,IAEZG,GAAI,CACFH,SAAU,IAEZI,GAAI,CACFJ,SAAU,IAEZK,GAAI,CACFL,SAAU,OCjDElB,aAAW,SAACwB,GAAD,MAAmB,CAC9CvB,KAAM,CACJC,QAAS,OACTuB,OAAQ,IACRrB,MAAO,IACPsB,QAAS,GACTC,gBAAiBtB,GAAYC,KAC7BsB,aAAc,GACdC,WAAY,IACZC,MAAO,a,UCSI/B,GAjBGC,aAAW,SAACwB,GAAD,MAAmB,CAC9CO,OAAQ,CACNC,UAAW,SACXC,YAAa,QACbP,QAAS,GACTQ,YAAa,EACbC,UAAW,GACXL,MAAOzB,GAAcC,MAEvB8B,eAAgB,CACdV,QAAS,GACTQ,YAAa,EACbC,UAAW,GACXR,gBAAiBtB,GAAcC,UCNtB+B,GAAoC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAO5J,EAA0B,EAA1BA,OAAQ6J,EAAkB,EAAlBA,YAC3DC,EAAUzC,KAoBhB,OACE,kBAAC0C,EAAA,EAAD,CAAMC,UAAWH,EAAcC,EAAQT,OAASS,EAAQJ,gBACrDG,EAbgB,SAACD,EAAgB5J,GACpC,OAAO4J,GAAS5J,EACd,oCACE,kBAACiK,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,KAXgB,SAACjK,EAAgBkK,GACrC,IAAMC,EAASnK,EAAOoK,OAAO,EAAGF,GAC1BG,EAASrK,EAAOoK,OAAOpK,EAAOsK,OAASJ,GAE7C,OAAOC,EAAOI,OAAO,OAAOA,OAAOF,GAOlBG,CAAcxK,EAAQ,MAGrC,kBAACiK,GAAA,EAAD,qBAMeQ,CAAab,EAAO5J,GAAU,uC,UCZpCqH,GAlBGC,aAAW,SAACwB,GAAD,MAAmB,CAC9CvB,KAAM,GACNmD,OAAQ,CACNhD,MAAO,OACPuB,gBAAiBtB,GAAWC,KAC5B+C,cAAe,YACfpB,YAAa,QACbH,MAAOzB,GAAaG,KAEpB,UAAW,CACTmB,gBAAiBtB,GAAWE,OAE9B,aAAc,CACZoB,gBAAiBtB,GAAYC,WCiBpBgD,GAtBsC,SAAC,GAK/C,IAJLC,EAII,EAJJA,WACAjB,EAGI,EAHJA,MACAkB,EAEI,EAFJA,QACAjB,EACI,EADJA,YAEMC,EAAUzC,KAEV0D,GAAYlB,GAAgBD,IAAUiB,EAK5C,OACE,kBAACd,EAAA,EAAD,CAAMC,UAAWF,EAAQvC,MACvB,kBAACyD,GAAA,EAAD,CAAQhB,UAAWF,EAAQY,OAAQI,QAASA,EAASC,SAAUA,GAN7C,SAAClB,EAAsBD,GAC3C,OAAOC,EAAeD,EAAQ,UAAY,gBAAmB,OAMxDqB,CAAcpB,EAAaD,MCXvBsB,GAAgC,SAAC,GAAkD,IAAjD1K,EAAgD,EAAhDA,GAAIoJ,EAA4C,EAA5CA,MAAOiB,EAAqC,EAArCA,WAAY7K,EAAyB,EAAzBA,OAAQ6J,EAAiB,EAAjBA,YACpEsB,EAAWC,cACXtB,EAAUzC,KAEhB,OACI,kBAAC0C,EAAA,EAAD,CAAMsB,WAAS,EAACrB,UAAWF,EAAQvC,KAAM+D,UAAW,SAAUC,QAAS,iBACnE,kBAAC,GAAD,CAAY3B,MAAOA,EAAO5J,OAAQA,EAAQ6J,YAAaA,IACvD,kBAAC,GAAD,CACID,MAAOA,EACPiB,WAAYA,EACZC,QAAS,WbRS,IAACU,EaUXL,EADAN,GbTWW,EaUiBhL,EbVEoB,iBAAOF,EAAWR,qBAAsBsK,IAD/D,SAACA,GAAD,OAAoB5J,iBAAOF,EAAWb,kBAAmB2K,GaavD1K,CAAgBN,KAGjCqJ,YAAaA,M,oBT3BjBzC,O,eAAAA,I,kBAAAA,M,KUJL,IAAMqE,GAAiB,SAACC,EAAe1L,EAAiBN,GAC3D,IAAMiB,EAA0B,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAAMiB,KAEzC,MAAO,CACHH,GAAE,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMc,GACVR,OAAM,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMM,OACd4J,MAAOjJ,IAASyG,EAASuE,MACzBd,WAAYlK,IAASyG,EAASuE,OAAS3L,KAAM,OAAKN,QAAL,IAAKA,OAAL,EAAKA,EAAMM,QACxD6J,YAAa6B,ICHfE,GAAQ,SAACA,GAAD,OAAwCA,EAAMC,WAM/CC,IAJiBC,aAAeH,IAAO,SAACC,GACjD,OAAOA,EAAU7L,UAGW+L,aAAeH,IAAQ,SAACC,GACpD,IAAMG,EAAyB,GAI/B,OAHAA,EAAUC,KAAKR,GAAeI,EAAUH,KAAMG,EAAU7L,OAAQ6L,EAAUxL,YAC1E2L,EAAUC,KAAKR,GAAeI,EAAUH,KAAMG,EAAU7L,OAAQ6L,EAAUvL,aAEnE0L,MCXEE,GAAuB,WAChC,IAAMpC,EAAUzC,IACV8E,EAA0BC,YAAYN,IAG5C,OACI,kBAAC/B,EAAA,EAAD,CAAMsB,WAAS,EAACE,QAAQ,eAAevB,UAAWF,EAAQvC,MACtD,kBAACwC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAUvJ,GAAI2L,EAAW,GAAG3L,GAClBoJ,MAAOuC,EAAW,GAAGvC,MACrB5J,OAAQmM,EAAW,GAAGnM,OACtB6K,WAAYsB,EAAW,GAAGtB,WAC1BhB,YAAasC,EAAW,GAAGtC,eAEzC,kBAACE,EAAA,EAAD,KACI,kBAAC,GAAD,CAAUvJ,GAAI2L,EAAW,GAAG3L,GAClBoJ,MAAOuC,EAAW,GAAGvC,MACrB5J,OAAQmM,EAAW,GAAGnM,OACtB6K,WAAYsB,EAAW,GAAGtB,WAC1BhB,YAAasC,EAAW,GAAGtC,iBCrBxCwC,GAAqB,WAC9B,IAAMvC,EAAUzC,IAEhB,OACI,kBAAC0C,EAAA,EAAD,CAAMsB,WAAS,EAACE,QAAQ,SAASe,WAAW,SAAStC,UAAWF,EAAQvC,MACpE,kBAAC,GAAD,QCkCGgF,OArCf,WACI,IAAMpB,EAAWC,cAEXoB,EAAiB,uCAAG,4BAAAvK,EAAA,sEACQkF,IADR,QAChBsF,EADgB,QAGfC,WAAU,SAACzG,GACd,OAAQA,EAAQe,aACZ,KAAKxC,EAAY0C,cACb,GAAIjB,EAAQY,OAAS4F,EAAOE,YACxB,MAEJxB,GlBCiBU,EkBDa5F,EAAQa,KlBCIlF,iBAAOF,EAAWkL,uBAAwBf,KkBApF,MAEJ,KAAKrH,EAAY3D,kBACbsK,GlBFapJ,EkBEakE,EAAQa,KlBFQlF,iBAAOF,EAAWmL,kBAAmB9K,KkBG/E,MAEJ,KAAKyC,EAAYtD,qBACbiK,EAASrJ,EAAoBmE,EAAQa,OlBNzB,IAAC/E,EADI8J,KkBVP,2CAAH,qDA6BvB,OALAiB,qBAAU,WACN3B,ElBrBwBvJ,iBAAOF,EAAWqL,ekBsB1CP,MACD,IAGC,kBAAC,GAAD,OC7BYQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yCChBOC,GAAW,SAAC3N,EAAYqC,GACjC,MAAO,CACHvB,GAAId,EAAKc,GACTR,OAAQ+B,EAAY8E,KACpBlG,KAAMyG,EAASuE,MACflL,UAAWsB,EAAYtB,YAIlB6M,GAAc,SAAC5N,EAAYqC,GACpC,MAAO,CACHvB,GAAId,EAAKc,GACTR,YAAQuN,EACR5M,KAAMyG,EAASoG,KACf/M,UAAWsB,EAAYtB,YAIlBgN,GAAkB,SAACjN,EAAYd,GACxC,YAAa6N,IAAT7N,GAIAc,KAAE,OAAKd,QAAL,IAAKA,OAAL,EAAKA,EAAMc,KAIVd,EAAKiB,OAASyG,EAASoG,MAGrBE,GAAyB,SAAClN,EAAYqG,EAAcnH,GAC7D,YAAa6N,IAAT7N,GAIGA,EAAKc,KAAOA,GAAMd,EAAKiB,OAASyG,EAASuE,OAASjM,EAAKM,SAAW6G,GAGhE8G,GAAmB,SAACC,EAAwBC,GACrD,QAAWN,IAAPK,QAA2BL,IAAPM,EAIxB,YAAWN,IAAPK,QAA2BL,IAAPM,EACbD,OAGAL,IAAPK,QAA2BL,IAAPM,EACbA,EAGHD,GAAkBC,EAAgBD,EAAKC,GC/C7CC,GAA0B,CAC5BpC,MAAM,G,YCFAqC,I,YAMAC,I,YAKAC,I,YAKAC,I,YAKAC,I,YAIAC,I,YAIAC,I,YAIAC,I,YAIOC,IArCjB,SAAUR,KAAV,uEAC4B,OAD5B,SACkC5G,IADlC,OAEI,OADMsF,EADV,gBAEUA,EAAO/F,0BAFjB,OAGI,OAHJ,SAGU8H,aAAI7M,EAAU8K,EAAOE,cAH/B,wCAMA,SAAUqB,KAAV,uEAC4B,OAD5B,SACkC7G,IADlC,OAEI,OADMsF,EADV,gBAEU+B,aAAI7M,EAAU8K,EAAOE,cAF/B,wCAKA,SAAUsB,GAAerM,GAAzB,uEAC4B,OAD5B,SACkCuF,IADlC,OAEI,OADMsF,EADV,gBAEUA,EAAOY,SAASzL,EAAOgF,SAFjC,wCAKA,SAAUsH,GAAkBtM,GAA5B,uEAC4B,OAD5B,SACkCuF,IADlC,OAEI,OADMsF,EADV,gBAEUA,EAAOa,YAAY1L,EAAOgF,SAFpC,wCAKA,SAAUuH,KAAV,iEACI,OADJ,SACUM,aAAU/M,EAAWqL,aAAciB,IAD7C,wCAIA,SAAUI,KAAV,iEACI,OADJ,SACUK,aAAU/M,EAAWgN,iCAAkCX,IADjE,wCAIA,SAAUM,KAAV,iEACI,OADJ,SACUI,aAAU/M,EAAWb,kBAAmBoN,IADlD,wCAIA,SAAUK,KAAV,iEACI,OADJ,SACUG,aAAU/M,EAAWR,qBAAsBgN,IADrD,wCAIO,SAAUK,KAAV,iEACH,OADG,SACGI,aAAI,CAACC,aAAKT,IAAmBS,aAAKR,IAAgCQ,aAAKP,IAAiBO,aAAKN,MADhG,wC,gBC3BUO,IAJJC,GAAcC,2BAAkC,CACzDlD,UFF2C,WAAmC,IAAlCD,EAAiC,uDAAzBkC,GAAclM,EAAW,uCAC7E,OAAQA,EAAOjB,MACX,KAAKe,EAAWG,YACZ,OAAO,6BAAI+J,GAAX,IAAkB5L,OAAQ4B,EAAOgF,UAErC,KAAKlF,EAAWkL,uBAAyB,IAAD,MACJhL,EAAOgF,QAAhCvG,EAD6B,EAC7BA,UAAWC,EADkB,EAClBA,WACZ0O,EAAmBrB,GAAgB,UAAC/B,EAAMvL,iBAAP,aAAC,EAAiBI,UAAlB,UAA6BmL,EAAMtL,kBAAnC,aAA6B,EAAkBG,WAClFwO,EAAoBtB,GAAgB,OAACtN,QAAD,IAACA,OAAD,EAACA,EAAWI,UAAZ,OAAuBH,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAYG,WAE7E,YAAyB8M,IAArByB,QAIsBzB,IAAtB0B,GAAmCA,EAAqBD,EAHjD,0CAAIpD,GAAUhK,EAAOgF,SAA5B,IAAqC8E,MAAM,IAOxCE,EAEX,KAAKlK,EAAWmL,kBAAoB,IACzBrM,EAAMoB,EAAOgF,QAAbpG,GAEP,GAAIiN,GAAgBjN,EAAIoL,EAAMvL,WAAY,CACtC,IAAM6O,EAAU7B,GAASzB,EAAMvL,UAAmBuB,EAAOgF,SACzD,OAAO,6BAAIgF,GAAX,IAAkBvL,UAAW6O,IAGjC,GAAIzB,GAAgBjN,EAAIoL,EAAMtL,YAAa,CACvC,IAAM4O,EAAU7B,GAASzB,EAAMtL,WAAoBsB,EAAOgF,SAC1D,OAAO,6BAAIgF,GAAX,IAAkBtL,WAAY4O,IAElC,OAAOtD,EAEX,KAAKlK,EAAWM,qBAAuB,IAAD,EACfJ,EAAOgF,QAAnBpG,EAD2B,EAC3BA,GAAIqG,EADuB,EACvBA,KAEX,GAAI6G,GAAuBlN,EAAIqG,EAAM+E,EAAMvL,WAAY,CACnD,IAAM6O,EAAU5B,GAAY1B,EAAMvL,UAAmBuB,EAAOgF,SAC5D,OAAO,6BAAIgF,GAAX,IAAkBvL,UAAW6O,IAGjC,GAAIxB,GAAuBlN,EAAIqG,EAAM+E,EAAMtL,YAAa,CACpD,IAAM4O,EAAU5B,GAAY1B,EAAMtL,WAAoBsB,EAAOgF,SAC7D,OAAO,6BAAIgF,GAAX,IAAkBtL,WAAY4O,IAElC,OAAOtD,EAGX,QACI,OAAOA,ME7CZ,SAAUiD,KAAV,iEACH,OADG,SACGF,aAAI,CACNC,aAAKL,MAFN,wC,cCNP,IAAMY,GCHS,SACXrB,GAEA,IAAMsB,EAAmBC,+BAAoB,IACvCC,EAAiBC,eAEjBJ,EAAQK,uBACVV,GACAhB,EACAsB,EAAiBK,2BAAgBH,KAIrC,OADAA,EAAeI,IAAIb,IACZM,EDVGQ,CAAe,CAAC9D,UAAW,CAACH,MAAM,KAEhDkE,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUX,MAAOA,IACb,kBAAC,GAAD,QAGRY,SAASC,eAAe,SL0HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjK,QAAQiK,MAAMA,EAAMvK,c","file":"static/js/main.c8c559ca.chunk.js","sourcesContent":["const protons = require('protons')\n\nconst {Message} = protons(`\n    message Message {\n        enum Type {\n            CURRENT_STATE = 0;\n            TAKE_SEAT_REQUEST = 1;\n            RELEASE_SEAT_REQUEST = 2;\n            REQUIRES_SYNCHRONIZATION = 3;\n        }\n    \n        required Type type = 1;\n        optional CurrentState currentState = 2;\n        optional TakeSeatRequest takeSeatRequest = 3;\n        optional ReleaseSeatRequest releaseSeatRequest = 4;\n    }\n\n    message CurrentState {\n        required Seat firstSeat = 1;\n        required Seat secondSeat = 2;\n    }\n    \n    message Seat {\n          enum Type {\n            FREE = 0;\n            TAKEN = 1;\n          }\n    \n         required int64 id = 1;\n         required Type type = 2;\n         optional bytes peerId = 3;\n         required int64 timestamp = 4;\n    }\n    \n    message TakeSeatRequest {\n        required int64 id = 1;\n        required int64 timestamp = 2;\n    }\n    \n    message ReleaseSeatRequest {\n        required int64 id = 1;\n        required int64 timestamp = 2;\n    }\n`)\n\nmodule.exports = {\n    Message\n}","const uint8arrayToString = require('uint8arrays/to-string')\n\nconst {Message} = require('./protocol.model')\n\n\nconst encodeRequiresSynchronization = () => {\n    return Message.encode({\n        type: Message.Type.REQUIRES_SYNCHRONIZATION\n    })\n}\n\nconst decodeMessage = (encodedMessage) => {\n    return Message.decode(encodedMessage)\n}\n\nconst encodeTakeSeatRequest = ({id, timestamp}) => {\n    return Message.encode({\n        type: Message.Type.TAKE_SEAT_REQUEST,\n        takeSeatRequest: {\n            id,\n            timestamp\n        }\n    })\n}\n\nconst decodeTakeSeatRequest = (encodedTakeSeatRequest) => {\n    const {takeSeatRequest} = Message.decode(encodedTakeSeatRequest)\n    return takeSeatRequest\n}\n\nconst encodeReleaseSeatRequest = ({id, timestamp}) => {\n    return Message.encode({\n        type: Message.Type.RELEASE_SEAT_REQUEST,\n        releaseSeatRequest: {\n            id,\n            timestamp\n        }\n    })\n}\n\nconst decodeReleaseSeatRequest = (encodedReleaseSeatRequest) => {\n    const {releaseSeatRequest} = Message.decode(encodedReleaseSeatRequest)\n    return releaseSeatRequest\n}\n\nconst decodeCurrentState = (encodedCurrentState) => {\n    const {currentState: decodeCurrentState} = Message.decode(encodedCurrentState)\n\n    return {\n        firstSeat: seatFromBytes(decodeCurrentState.firstSeat),\n        secondSeat: seatFromBytes(decodeCurrentState.secondSeat)\n    }\n}\n\nconst seatFromBytes = (seat) => {\n    return transformMsg(seat, uint8arrayToString)\n}\n\nconst transformMsg = (seat, peerIdConverter) => {\n    const output = Object.assign({}, seat);\n    if (output.peerId) {\n        return Object.assign(output, {peerId: peerIdConverter(output.peerId)})\n    }\n    delete output.peerId\n    return output\n}\n\nmodule.exports = {\n    decodeCurrentState,\n    encodeTakeSeatRequest,\n    decodeTakeSeatRequest,\n    encodeReleaseSeatRequest,\n    decodeReleaseSeatRequest,\n    decodeMessage,\n    encodeRequiresSynchronization\n}","import {action} from 'typesafe-actions'\n\nimport {SeatRequest, SeatState} from \"./types\";\n\nexport enum SeatAction {\n    INIT_LIB_P2P = \"INIT_LIB_P2P\",\n    SET_PEER_ID = \"SET_PEER_ID\",\n    REQUIRES_SYNCHRONIZATION_REQUEST = \"REQUIRES_SYNCHRONIZATION_REQUEST\",\n    CURRENT_STATE_RESPONSE = \"CURRENT_STATE_RESPONSE\",\n    TAKE_SEAT_REQUEST = \"TAKE_SEAT_REQUEST\",\n    TAKE_SEAT_HANDLER = \"TAKE_SEAT_HANDLER\",\n    RELEASE_SEAT_REQUEST = \"RELEASE_SEAT_REQUEST\",\n    RELEASE_SEAT_HANDLER = \"RELEASE_SEAT_HANDLER\"\n}\n\nexport const initLibp2p = () => action(SeatAction.INIT_LIB_P2P)\nexport const setPeerId = (peerId: string) => action(SeatAction.SET_PEER_ID, peerId)\nexport const requiresSynchronization = () => action(SeatAction.REQUIRES_SYNCHRONIZATION_REQUEST)\nexport const takeSeatRequest = (seatId: number) => action(SeatAction.TAKE_SEAT_REQUEST, seatId)\nexport const releaseSeatRequest = (seatId: number) => action(SeatAction.RELEASE_SEAT_REQUEST, seatId)\n\nexport const currentStateResponse = (seatState: SeatState) => action(SeatAction.CURRENT_STATE_RESPONSE, seatState)\nexport const takeSeatResponse = (seatRequest: SeatRequest) => action(SeatAction.TAKE_SEAT_HANDLER, seatRequest)\nexport const releaseSeatResponse = (seatRequest: SeatRequest) => action(SeatAction.RELEASE_SEAT_HANDLER, seatRequest)","import PeerId from 'peer-id'\n\nasync function getOrCreatePeerId(): Promise<PeerId> {\n    let peerId\n    try {\n        peerId = JSON.parse(localStorage.getItem('peerId') as string)\n        peerId = await PeerId.createFromJSON(peerId)\n    } catch (err) {\n        peerId = await PeerId.create()\n        localStorage.setItem('peerId', JSON.stringify(peerId.toJSON()))\n    }\n\n    return peerId\n}\n\nexport default getOrCreatePeerId","import getOrCreatePeerId from \"./peer-id\";\n\nconst Libp2p = require('libp2p')\nconst Websockets = require('libp2p-websockets')\nconst WebrtcStar = require('libp2p-webrtc-star')\nconst Mplex = require('libp2p-mplex')\nconst {NOISE} = require('libp2p-noise')\nconst Bootstrap = require('libp2p-bootstrap')\nconst KademliaDHT = require('libp2p-kad-dht')\nconst Gossipsub = require('libp2p-gossipsub')\n\nconst listenAddr = '/ip4/127.0.0.1/tcp/15555/ws/p2p-webrtc-star'\nconst discoveryAddr = '/ip4/127.0.0.1/tcp/63786/ws/p2p/QmWjz6xb8v9K4KnYEwP5Yk75k5mMBCehzWFLCvvQpYxF3d'\n\nlet _libp2p: any | null = null\n\nasync function getOrCreateLibp2p() {\n    const peerId = (await getOrCreatePeerId())\n\n    if (_libp2p != null) {\n        return _libp2p\n    }\n\n    _libp2p = await Libp2p.create({\n        peerId,\n        addresses: {\n            listen: [\n                listenAddr\n            ]\n        },\n        modules: {\n            transport: [Websockets, WebrtcStar],\n            streamMuxer: [Mplex],\n            connEncryption: [NOISE],\n            peerDiscovery: [Bootstrap],\n            dht: KademliaDHT,\n            pubsub: Gossipsub\n        },\n        config: {\n            peerDiscovery: {\n                bootstrap: {\n                    list: [discoveryAddr]\n                }\n            },\n            dht: {\n                enabled: true,\n                randomWalk: {\n                    enabled: true\n                }\n            }\n        }\n    })\n    await _libp2p.start()\n\n    return _libp2p\n}\n\nexport default getOrCreateLibp2p","import getOrCreateLibp2p from \"./libp2p\";\nimport {SeatRequest, SeatState} from \"../store/types\";\n\nconst {Message} = require('../protocol/protocol.model')\nconst {\n    encodeRequiresSynchronization, encodeTakeSeatRequest,\n    encodeReleaseSeatRequest, decodeMessage, decodeCurrentState,\n    decodeTakeSeatRequest, decodeReleaseSeatRequest\n} = require('../protocol/protocol.utility')\n\nexport enum MessageType {\n    CURRENT_STATE,\n    TAKE_SEAT_REQUEST,\n    RELEASE_SEAT_REQUEST,\n    REQUIRES_SYNCHRONIZATION\n}\n\n\ntype MessageData = SeatRequest | SeatState | null\n\nexport interface Message {\n    from: String,\n    messageType: MessageType,\n    data: MessageData\n}\n\ninterface IPayload {\n    from: string\n    data: Uint8Array\n}\n\nexport interface IPubSub {\n    getPeerId: () => string\n    requiresSynchronization: () => void\n    takeSeat: (seatId: number) => void\n    releaseSeat: (seatId: number) => void\n    joinTopic: (messageHandler: (message: Message) => void) => void\n    leaveTopic: () => void\n}\n\nclass PubSub implements IPubSub {\n    private readonly _topic: string\n    private _libp2p: any\n    private _connectedPeers: Set<String>\n\n    constructor(libp2p: any, topic: string) {\n        this._libp2p = libp2p\n        this._topic = topic\n        this._connectedPeers = new Set()\n\n        this._libp2p.connectionManager.on('peer:connect', this.handleConnect.bind(this))\n        this._libp2p.connectionManager.on('peer:disconnect', this.handleDisconnect.bind(this))\n\n        this._libp2p.pubsub.start()\n    }\n\n    public joinTopic(messageHandler: (message: Message) => void) {\n        this._libp2p.pubsub.on(this._topic, (payLoad: IPayload) => {\n            messageHandler(PubSub.convertPayload(payLoad))\n        })\n\n        this._libp2p.pubsub.subscribe(this._topic)\n\n    }\n\n    public leaveTopic() {\n        this._libp2p.pubsub.removeListener(this._topic)\n        this._libp2p.pubsub.unsubscribe(this._topic)\n    }\n\n    public requiresSynchronization() {\n        setTimeout(() => {\n            this.send(encodeRequiresSynchronization())\n        }, 1000)\n    }\n\n    public async takeSeat(id: number) {\n        await this.send(encodeTakeSeatRequest({\n            id: id,\n            timestamp: Date.now()\n        }))\n    }\n\n    public async releaseSeat(id: number) {\n        await this.send(encodeReleaseSeatRequest({\n            id: id,\n            timestamp: Date.now()\n        }))\n    }\n\n    public getPeerId(): string {\n        return this._libp2p.peerId._idB58String\n    }\n\n    private static convertPayload(payload: IPayload): Message {\n        const {from, data} = payload\n\n        const decodedMessage = decodeMessage(data);\n        const messageType: MessageType = decodedMessage.type\n        let messageData: MessageData = null\n\n        switch (decodedMessage.type) {\n            case Message.Type.CURRENT_STATE: {\n                messageData = decodeCurrentState(data)\n                break\n            }\n            case Message.Type.TAKE_SEAT_REQUEST: {\n                const {id, timestamp} = decodeTakeSeatRequest(data)\n                messageData = {id, timestamp, from}\n                break\n            }\n            case Message.Type.RELEASE_SEAT_REQUEST: {\n                const {id, timestamp} = decodeReleaseSeatRequest(data)\n                messageData = {id, timestamp, from}\n                break\n            }\n        }\n\n        return {\n            from,\n            messageType,\n            data: messageData\n        }\n    }\n\n    private async send(message: any) {\n        await this._libp2p.pubsub.publish(this._topic, message)\n    }\n\n    private handleConnect(connection: any) {\n        if (this._connectedPeers.has(connection.remotePeer.toB58String())) return\n        console.info(`Connect with: ${connection.remotePeer.toB58String()}`)\n        this._connectedPeers.add(connection.remotePeer.toB58String())\n        this.requiresSynchronization()\n    }\n\n    private handleDisconnect(connection: any) {\n        console.info(`Disconnect with: ${connection.remotePeer.toB58String()}`)\n        this._connectedPeers.delete(connection.remotePeer.toB58String())\n    }\n}\n\nexport const topic: string = '/libp2p/seats-protocol/1.0.0'\nlet _pubSub: IPubSub\n\nexport async function getOrCreatePubSub(): Promise<IPubSub> {\n    if (_pubSub != null) {\n        return _pubSub\n    }\n\n    const libp2p = await getOrCreateLibp2p();\n    _pubSub = new PubSub(libp2p, topic)\n\n    return _pubSub\n}","export interface Seat {\n    id: number,\n    type: SeatType,\n    peerId?: string\n    timestamp: number\n}\n\nexport enum SeatType {\n    FREE,\n    TAKEN\n}\n\nexport interface SeatState {\n    firstSeat?: Seat,\n    secondSeat?: Seat,\n    peerId?: string\n    init: boolean\n}\n\nexport interface SeatRequest {\n    id: number,\n    timestamp: number,\n    from: string\n}\n","import {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        margin: '30px'\n    }\n}))\n\nexport default useStyles\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        width: '100%'\n    }\n}))\n\nexport default useStyles\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const colors = {\n  blue: {\n    base: '#132743',\n    light: '#2462b8'\n  },\n  red: {\n    base: '#d7385e',\n    light: '#ff4e78'\n  },\n  yellow: {\n    base: '#edc988',\n    light: '#f8efd4'\n  },\n  gray: {\n    base: '#dcdcdc'\n  },\n  white: {\n    main: '#FFFFFF'\n  }\n}\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: colors.blue.base,\n      contrastText: colors.red.base\n    },\n    secondary: {\n      main: colors.yellow.base\n    },\n    text: {\n      primary: colors.white.main,\n      secondary: colors.blue.light\n    }\n  },\n  typography: {\n    fontFamily: 'Roboto',\n    body1: {\n      fontSize: 22,\n      lineHeight: '40px'\n    },\n    body2: {\n      fontSize: 16\n    },\n    h1: {\n      fontSize: 56\n    },\n    h2: {\n      fontSize: 40\n    },\n    h3: {\n      fontSize: 32\n    }\n  }\n})\n","import { makeStyles, Theme } from '@material-ui/core/styles'\nimport { colors } from '../../static/theme'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    height: 245,\n    width: 300,\n    padding: 20,\n    backgroundColor: colors.blue.base,\n    borderRadius: 10,\n    fontWeight: 900,\n    color: '#fff'\n  }\n}))\n\nexport default useStyles\n","import { makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { colors } from '../../static/theme'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  status: {\n    textAlign: 'center',\n    borderStyle: 'solid',\n    padding: 10,\n    borderWidth: 2,\n    minHeight: 50,\n    color: colors.yellow.base\n  },\n  skeletonStatus: {\n    padding: 10,\n    borderWidth: 2,\n    minHeight: 50,\n    backgroundColor: colors.yellow.base\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\n\nimport useStyles from './style'\n\nexport interface ISeatStatus {\n  taken: boolean\n  peerId?: string\n  initialized: boolean\n}\n\nexport const SeatStatus: React.FC<ISeatStatus> = ({ taken, peerId, initialized }) => {\n  const classes = useStyles()\n\n  const shortenPeerId = (peerId: string, last: number) => {\n    const prefix = peerId.substr(0, last)\n    const suffix = peerId.substr(peerId.length - last)\n\n    return prefix.concat('...').concat(suffix)\n  }\n\n  const getStatusBox = (taken: boolean, peerId?: string) => {\n    return taken && peerId ? (\n      <>\n        <Typography>Seats is taken by:</Typography>\n        <Typography>{shortenPeerId(peerId, 10)}</Typography>\n      </>\n    ) : (\n      <Typography>Seat is free</Typography>\n    )\n  }\n\n  return (\n    <Grid className={initialized ? classes.status : classes.skeletonStatus}>\n      {initialized ? getStatusBox(taken, peerId) : <></>}\n    </Grid>\n  )\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { colors } from '../../static/theme'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  button: {\n    width: '100%',\n    backgroundColor: colors.red.base,\n    textTransform: 'lowercase',\n    borderStyle: 'solid',\n    color: colors.white.main,\n\n    '&:hover': {\n      backgroundColor: colors.red.light\n    },\n    '&:disabled': {\n      backgroundColor: colors.gray.base\n    }\n  }\n}))\n\nexport default useStyles\n","import React from 'react'\nimport { Button, Grid } from '@material-ui/core'\n\nimport useStyles from './style'\n\nexport interface ISeatStatus {\n  taken: boolean\n  releasable?: boolean\n  onClick: () => void\n  initialized: boolean\n}\n\nexport const TakeSeatButton: React.FC<ISeatStatus> = ({\n  releasable,\n  taken,\n  onClick,\n  initialized\n}) => {\n  const classes = useStyles()\n\n  const disabled = !initialized || (taken && !releasable)\n  const getButtonName = (initialized: boolean, taken: boolean) => {\n    return initialized ? (taken ? 'Release' : 'Take the seat') : 'wait'\n  }\n\n  return (\n    <Grid className={classes.root}>\n      <Button className={classes.button} onClick={onClick} disabled={disabled}>\n        {getButtonName(initialized, taken)}\n      </Button>\n    </Grid>\n  )\n}\n\nexport default TakeSeatButton\n","import React from 'react'\nimport {Grid} from '@material-ui/core'\nimport {useDispatch} from \"react-redux\";\n\nimport useStyles from './style'\nimport {SeatStatus} from '../SeatStatus/SeatStatus'\nimport TakeSeatButton from '../TakeSeatButton/TakeSeatButton'\nimport {releaseSeatRequest, takeSeatRequest} from \"../../store/actions\";\n\nexport interface ISeatCard {\n    id: number,\n    taken: boolean\n    releasable: boolean\n    peerId?: string\n    initialized: boolean\n}\n\nexport const SeatCard: React.FC<ISeatCard> = ({id, taken, releasable, peerId, initialized}) => {\n    const dispatch = useDispatch();\n    const classes = useStyles()\n\n    return (\n        <Grid container className={classes.root} direction={'column'} justify={'space-between'}>\n            <SeatStatus taken={taken} peerId={peerId} initialized={initialized}/>\n            <TakeSeatButton\n                taken={taken}\n                releasable={releasable}\n                onClick={() => {\n                    if (releasable) {\n                        dispatch(releaseSeatRequest(id))\n                    } else {\n                        dispatch(takeSeatRequest(id))\n                    }\n                }}\n                initialized={initialized}\n            />\n        </Grid>\n    )\n}\n","import {ISeatCard} from \"../../components/SeatCard/SeatCard\";\nimport {Seat, SeatType} from \"../types\";\n\nexport const seatToSeatCard = (init: boolean, peerId?: string, seat?: Seat): ISeatCard => {\n    const type: SeatType | undefined = seat?.type;\n\n    return {\n        id: seat?.id as number,\n        peerId: seat?.peerId,\n        taken: type === SeatType.TAKEN,\n        releasable: type === SeatType.TAKEN && peerId === seat?.peerId,\n        initialized: init\n    }\n}","import {createSelector} from 'reselect'\n\nimport {ApplicationState} from \"../index\";\nimport {SeatState} from \"../types\";\nimport {ISeatCard} from \"../../components/SeatCard/SeatCard\";\nimport {seatToSeatCard} from \"./helper\";\n\n\nconst state = (state: ApplicationState): SeatState => state.seatState\n\nexport const PeerIdSelector = createSelector(state, (seatState) => {\n    return seatState.peerId\n})\n\nexport const SeatCardSelector = createSelector(state,  (seatState) => {\n    const seatCards: ISeatCard[] = []\n    seatCards.push(seatToSeatCard(seatState.init, seatState.peerId, seatState.firstSeat))\n    seatCards.push(seatToSeatCard(seatState.init, seatState.peerId, seatState.secondSeat))\n\n    return seatCards\n})","import React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\n\nimport useStyles from \"./style\";\nimport {ISeatCard, SeatCard} from \"../../components/SeatCard/SeatCard\";\nimport {SeatCardSelector} from \"../../store/selectors/selectors\";\n\nexport const SeatsPanel: React.FC = () => {\n    const classes = useStyles()\n    const seatsCards: ISeatCard[] = useSelector(SeatCardSelector);\n\n\n    return (\n        <Grid container justify=\"space-around\" className={classes.root}>\n            <Grid>\n                <SeatCard id={seatsCards[0].id}\n                          taken={seatsCards[0].taken}\n                          peerId={seatsCards[0].peerId}\n                          releasable={seatsCards[0].releasable}\n                          initialized={seatsCards[0].initialized}/>\n            </Grid>\n            <Grid>\n                <SeatCard id={seatsCards[1].id}\n                          taken={seatsCards[1].taken}\n                          peerId={seatsCards[1].peerId}\n                          releasable={seatsCards[1].releasable}\n                          initialized={seatsCards[1].initialized}/>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react'\nimport {Grid} from '@material-ui/core'\n\nimport useStyles from \"./style\";\nimport {SeatsPanel} from \"../SeatsPanel/SeatsPanel\";\n\nexport const MainPage: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\n            <SeatsPanel/>\n        </Grid>\n    )\n}\n","import React, {useEffect} from 'react'\nimport {useDispatch} from \"react-redux\";\n\nimport {currentStateResponse, initLibp2p, releaseSeatResponse, takeSeatResponse} from \"./store/actions\";\nimport {getOrCreatePubSub, IPubSub, Message, MessageType} from \"./p2p-node/pub-sub\";\nimport {SeatRequest, SeatState} from \"./store/types\";\nimport {MainPage} from \"./containers/MainPage/MainPage\";\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    const setMessageHandler = async () => {\n        const pubSub: IPubSub = await getOrCreatePubSub()\n\n        pubSub.joinTopic((message: Message) => {\n            switch (message.messageType) {\n                case MessageType.CURRENT_STATE: {\n                    if (message.from === pubSub.getPeerId()) {\n                        break\n                    }\n                    dispatch(currentStateResponse(message.data as SeatState))\n                    break\n                }\n                case MessageType.TAKE_SEAT_REQUEST: {\n                    dispatch(takeSeatResponse(message.data as SeatRequest))\n                    break\n                }\n                case MessageType.RELEASE_SEAT_REQUEST: {\n                    dispatch(releaseSeatResponse(message.data as SeatRequest))\n                    break\n                }\n            }\n        })\n    }\n\n    useEffect(() => {\n        dispatch(initLibp2p())\n        setMessageHandler()\n    }, [])\n\n    return (\n        <MainPage/>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Seat, SeatRequest, SeatType} from \"../types\";\n\nexport const takeSeat = (seat: Seat, seatRequest: SeatRequest): Seat => {\n    return {\n        id: seat.id,\n        peerId: seatRequest.from,\n        type: SeatType.TAKEN,\n        timestamp: seatRequest.timestamp\n    }\n}\n\nexport const releaseSeat = (seat: Seat, seatRequest: SeatRequest) => {\n    return {\n        id: seat.id,\n        peerId: undefined,\n        type: SeatType.FREE,\n        timestamp: seatRequest.timestamp\n    }\n}\n\nexport const checkSeatIsFree = (id: number, seat?: Seat | undefined) => {\n    if (seat === undefined) {\n        return true\n    }\n\n    if (id !== seat?.id) {\n        return false\n    }\n\n    return seat.type === SeatType.FREE\n}\n\nexport const checkSeatIsTakenByPeer = (id: number, from: string, seat?: Seat) => {\n    if (seat === undefined) {\n        return true\n    }\n\n    return seat.id === id && seat.type === SeatType.TAKEN && seat.peerId === from\n}\n\nexport const getLastTimestamp = (t1: number | undefined, t2: number | undefined): number | undefined => {\n    if (t1 === undefined && t2 === undefined) {\n        return undefined\n    }\n\n    if (t1 !== undefined && t2 === undefined) {\n        return t1\n    }\n\n    if (t1 === undefined && t2 !== undefined) {\n        return t2\n    }\n\n    return (t1 as number) >= (t2 as number) ? t1 : t2\n}","import {Reducer} from 'redux'\n\nimport {Seat, SeatState} from \"../types\";\nimport {SeatAction} from \"../actions\";\nimport {checkSeatIsFree, checkSeatIsTakenByPeer, getLastTimestamp, releaseSeat, takeSeat} from \"./helper\";\n\nconst initialState: SeatState = {\n    init: false\n}\n\nexport const seatReducer: Reducer<SeatState> = (state = initialState, action) => {\n    switch (action.type) {\n        case SeatAction.SET_PEER_ID: {\n            return {...state, peerId: action.payload}\n        }\n        case SeatAction.CURRENT_STATE_RESPONSE: {\n            const {firstSeat, secondSeat} = action.payload\n            const currentTimestamp = getLastTimestamp(state.firstSeat?.timestamp, state.secondSeat?.timestamp);\n            const proposalTimestamp = getLastTimestamp(firstSeat?.timestamp, secondSeat?.timestamp)\n\n            if (currentTimestamp === undefined) {\n                return {...state, ...action.payload, init: true}\n            }\n\n            if (proposalTimestamp !== undefined && proposalTimestamp > (currentTimestamp as number)) {\n                return {...state, ...action.payload, init: true}\n            }\n\n            return state\n        }\n        case SeatAction.TAKE_SEAT_HANDLER: {\n            const {id} = action.payload\n\n            if (checkSeatIsFree(id, state.firstSeat)) {\n                const newSeat = takeSeat(state.firstSeat as Seat, action.payload);\n                return {...state, firstSeat: newSeat}\n            }\n\n            if (checkSeatIsFree(id, state.secondSeat)) {\n                const newSeat = takeSeat(state.secondSeat as Seat, action.payload);\n                return {...state, secondSeat: newSeat}\n            }\n            return state\n        }\n        case SeatAction.RELEASE_SEAT_HANDLER: {\n            const {id, from} = action.payload\n\n            if (checkSeatIsTakenByPeer(id, from, state.firstSeat)) {\n                const newSeat = releaseSeat(state.firstSeat as Seat, action.payload);\n                return {...state, firstSeat: newSeat}\n            }\n\n            if (checkSeatIsTakenByPeer(id, from, state.secondSeat)) {\n                const newSeat = releaseSeat(state.secondSeat as Seat, action.payload);\n                return {...state, secondSeat: newSeat}\n            }\n            return state\n        }\n\n        default: {\n            return state\n        }\n    }\n}","import {all, put, takeEvery, fork} from 'redux-saga/effects'\nimport {getOrCreatePubSub, IPubSub} from \"../p2p-node/pub-sub\";\nimport {SeatAction, setPeerId} from \"./actions\";\nimport {PayloadAction} from \"typesafe-actions\";\n\nfunction* handleRequiresSynchronization() {\n    const pubSub: IPubSub = yield getOrCreatePubSub();\n    yield pubSub.requiresSynchronization()\n    yield put(setPeerId(pubSub.getPeerId()))\n}\n\nfunction* handleInitLibp2p() {\n    const pubSub: IPubSub = yield getOrCreatePubSub()\n    yield put(setPeerId(pubSub.getPeerId()))\n}\n\nfunction* handleTakeSeat(action: PayloadAction<any, any>) {\n    const pubSub: IPubSub = yield getOrCreatePubSub()\n    yield pubSub.takeSeat(action.payload)\n}\n\nfunction* handleReleaseSeat(action: PayloadAction<any, any>) {\n    const pubSub: IPubSub = yield getOrCreatePubSub()\n    yield pubSub.releaseSeat(action.payload)\n}\n\nfunction* listenInitlibp2p() {\n    yield takeEvery(SeatAction.INIT_LIB_P2P, handleInitLibp2p)\n}\n\nfunction* listenRequiresSynchronization() {\n    yield takeEvery(SeatAction.REQUIRES_SYNCHRONIZATION_REQUEST, handleRequiresSynchronization)\n}\n\nfunction* listenTakeSeat() {\n    yield takeEvery(SeatAction.TAKE_SEAT_REQUEST, handleTakeSeat)\n}\n\nfunction* listenReleaseSeat() {\n    yield takeEvery(SeatAction.RELEASE_SEAT_REQUEST, handleReleaseSeat)\n}\n\nexport function* seatSaga() {\n    yield all([fork(listenInitlibp2p), fork(listenRequiresSynchronization), fork(listenTakeSeat), fork(listenReleaseSeat)])\n}","import {combineReducers} from 'redux'\nimport {all, fork} from 'redux-saga/effects'\n\nimport {SeatState} from \"./types\";\nimport {seatReducer} from \"./reducers/reducer\";\nimport {seatSaga} from \"./sagas\";\n\nexport interface ApplicationState {\n    seatState: SeatState\n}\n\nexport const rootReducer = combineReducers<ApplicationState>({\n    seatState: seatReducer\n})\n\nexport function* rootSaga() {\n    yield all([\n        fork(seatSaga)\n    ])\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore({seatState: {init: false}});\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import {Store, createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport {ApplicationState, rootReducer, rootSaga} from './store'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n\nexport default function configureStore(\n    initialState: ApplicationState\n): Store<ApplicationState> {\n    const composeEnhancers = composeWithDevTools({})\n    const sagaMiddleware = createSagaMiddleware()\n\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(sagaMiddleware))\n    )\n\n    sagaMiddleware.run(rootSaga)\n    return store\n}"],"sourceRoot":""}